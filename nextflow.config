params {

    // simple text file with one SRA run accession to be downloaded per line
    accession_list = null

    // the desired reference sequence in FASTA format
    ref_fasta = null

    // the desired reference sequence in Genbank format
    ref_gbk = null

	// The maximum number of NCBI downloads to perform concurrently
	max_concurrent_downloads = 3

	// number of independent processes to allow SAMRefiner to use. Note that memory footprint
	// may increase super-linearly with this value.
	sam_refiner_procs = 4

    // The number of bases to remove in a gross trim of both ends of each read
    end_trim_bases = 0

    // whether to turn off automatic cleanup of the nextflow work directory
    no_cleanup = null

	// where to place results
	results = "${launchDir}/results"

	// Which mode to use when publishing results ('copy', 'move', 'symlink', or 'hardlink')
	reporting_mode = 'copy'

	// SRATracking surveillance parameters (optional)
	surveillance_start_date = null  // Format: YYYY-MM-DD
	surveillance_end_date = null    // Format: YYYY-MM-DD  
	surveillance_target_lineage = 'JN.1'  // Default lineage to analyze
	surveillance_exclude_bioprojects = 'PRJNA748354 PRJEB44932'  // Known problematic bioprojects
	surveillance_exclude_patterns = 'location:Maryland.*78365'   // Sample exclusion patterns
	surveillance_min_reads = 0  // Minimum read count threshold
	
	// Caching optimization settings
	surveillance_cache_ttl_days = 7  // How often to refresh reference cache (days)
	
	// Temporal analysis parameters
	surveillance_delta_threshold = 0.02  // Abundance change threshold (2%)
	surveillance_count_threshold = 100   // Minimum variant count threshold
	surveillance_window_weeks = 3        // Time window size for comparisons
	
	// Dual-mode operation parameters
	mode = 'daily'  // Options: 'daily', 'retrospective'
	retro_data = null  // Path to directory containing historical SAMRefiner outputs

}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
	enabled   = true
	overwrite = true
	file      = "${launchDir}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled   = true
	overwrite = true
	file      = "${params.results}/workflow-visualization.png"
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = params.no_cleanup ? false : true


// PROFILE OPTIONS
profiles {

	standard {

		apptainer.enabled = false
		docker.enabled    = false
		conda.enabled     = false
	}

	docker {

		docker.enabled      = true
		singularity.enabled = false
		conda.enabled       = false

		process.container   = ""
	}

	singularity {

		singularity.enabled = true
		docker.enabled      = false
		conda.enabled       = false

		process.container   = ""
	}

	apptainer {

		apptainer.enabled = true
		docker.enabled    = false
		conda.enabled     = false

		process.container = ""
	}

	chtc_hpc {

		// container engine settings
		apptainer.enabled      = true
		apptainer.cacheDir     = "work/apptainer/"
		apptainer.cacheDir     = "work/apptainer"
		apptainer.autoMounts   = true

		// container address
		process.container      = ""

		// slurm job settings
		process.executor       = "slurm"
		process.clusterOptions = "--partition=shared"
		process.maxForks       = 10
		process.cpus           = 20
		process.memory         = 64
		process.time           = 24.h
	}

	containerless {

		apptainer.enabled = false
		docker.enabled    = false
		conda.enabled     = false
	}
}

